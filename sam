for train_index, test_index in tscv.split(X):
    X_train, X_test = X.iloc[train_index], X.iloc[test_index]
    y_train, y_test = y.iloc[train_index], y.iloc[test_index]
    
    model.fit(X_train, y_train)
    predictions = model.predict(X_test)
    
    mse = mean_squared_error(y_test, predictions)
    mae = mean_absolute_error(y_test, predictions)
    print(f"MSE: {mse}, MAE: {mae}")

# Forecasting for next three months
last_date = df['month'].max()
future_dates = pd.date_range(start=last_date + pd.DateOffset(months=1), periods=3, freq='M')
future_df = pd.DataFrame({'month': future_dates})
future_df['year'] = future_df['month'].dt.year
future_df['month_num'] = future_df['month'].dt.month
future_df['quarter'] = future_df['month'].dt.quarter

# Create future dataframe for each customer
all_predictions = []
for customer in df['customer_name'].unique():
    customer_future = future_df.copy()
    customer_future['customer_name'] = customer
    customer_encoded = encoder.transform(customer_future[['customer_name']])
    customer_future = pd.concat([customer_future, pd.DataFrame(customer_encoded, columns=customer_columns)], axis=1)
    
    # Add lag features (you may need to adjust this based on your specific implementation)
    customer_future['lag_1'] = df_encoded[df_encoded['customer_name'] == customer]['line_amount'].iloc[-1]
    customer_future['lag_3_mean'] = df_encoded[df_encoded['customer_name'] == customer]['line_amount'].iloc[-3:].mean()
    
    customer_predictions = model.predict(customer_future[features])
    customer_future['predicted_line_amount'] = customer_predictions
    all_predictions.append(customer_future)

final_predictions = pd.concat(all_predictions, ignore_index=True)
print(final_predictions)
